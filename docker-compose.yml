version: "3.9"

networks:
  service_network:
  event_network:
  auth_network:
  cars_network:
  insurance_network:
  notification_network:
  spendings_network:

volumes:
  auth_database_vol:
  cars_database_vol:
  insurance_database_vol:
  notification_database_vol:
  spendings_database_vol:

services:
  event_redis:
    image: redis
    restart: always
    networks:
      - event_network

  auth_database:
    image: mongo
    restart: always
    volumes:
      - auth_database_vol:/data/db
    networks:
      - auth_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  auth:
    build: ./auth-service
    depends_on:
      - auth_database
      - event_redis
    networks:
      - service_network
      - event_network
      - auth_network
    environment:
      NODE_ENV: development
      DATABASE_HOST: auth_database
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      EVENT_REDIS_HOST: event_redis
      NOTIFICATION_SERVICE_HOST: notification_balancer:8080
  auth_balancer:
    image: nginx
    restart: always
    depends_on:
      - auth
    expose:
      - "8080"
    volumes:
      - ./auth-balancer/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - service_network
      - auth_network

  cars_database:
    image: mongo
    restart: always
    volumes:
      - cars_database_vol:/data/db
    networks:
      - cars_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  cars_redis:
    image: redis
    restart: always
    networks:
      - cars_network
  cars:
    build: ./cars-service
    depends_on:
      - cars_database
      - cars_redis
      - event_redis
    networks:
      - service_network
      - event_network
      - cars_network
    environment:
      NODE_ENV: development
      DATABASE_HOST: cars_database
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      CACHE_REDIS_HOST: cars_redis
      EVENT_REDIS_HOST: event_redis
  cars_balancer:
    image: nginx
    restart: always
    depends_on:
      - cars
    expose:
      - "8080"
    volumes:
      - ./cars-balancer/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - service_network
      - cars_network

  notification_database:
    image: mongo
    restart: always
    volumes:
      - notification_database_vol:/data/db
    networks:
      - notification_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  notification:
    build: ./notification-service
    depends_on:
      - notification_database
      - event_redis
    networks:
      - service_network
      - event_network
      - notification_network
    environment:
      NODE_ENV: development
      DATABASE_HOST: notification_database
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      EVENT_REDIS_HOST: event_redis
  notification_balancer:
    image: nginx
    restart: always
    depends_on:
      - notification
    expose:
      - "8080"
    volumes:
      - ./notification-balancer/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - service_network
      - notification_network

  insurance_database:
    image: mongo
    restart: always
    volumes:
      - insurance_database_vol:/data/db
    networks:
      - insurance_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  insurance:
    build: ./insurance-service
    depends_on:
      - insurance_database
    networks:
      - service_network
      - insurance_network
    environment:
      NODE_ENV: development
      DATABASE_HOST: insurance_database
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
  insurance_balancer:
    image: nginx
    restart: always
    depends_on:
      - insurance
    expose:
      - "8080"
    volumes:
      - ./insurance-balancer/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - service_network
      - insurance_network

  spendings_database:
    image: mongo
    restart: always
    volumes:
      - spendings_database_vol:/data/db
    networks:
      - spendings_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  spendings:
    build: ./spendings-service
    depends_on:
      - spendings_database
    networks:
      - service_network
      - spendings_network
    environment:
      NODE_ENV: development
      DATABASE_HOST: spendings_database
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
  spendings_balancer:
    image: nginx
    restart: always
    depends_on:
      - spendings
    expose:
      - "8080"
    volumes:
      - ./spendings-balancer/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - service_network
      - spendings_network

  pocketcar_balancer:
    image: nginx
    restart: always
    depends_on:
      - auth_balancer
      - cars_balancer
      - notification_balancer
      - insurance_balancer
      - spendings_balancer
    ports:
      - "8080:8080"
    volumes:
      - ./pocketcar-balancer/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - service_network
