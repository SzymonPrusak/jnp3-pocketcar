version: "3.9"

networks:
  system_network:
  event_network:
  auth_network:
  cars_network:
  insurance_network:
  notification_network:
  spendings_network:

volumes:
  auth_database_vol:
  cars_database_vol:
  insurance_database_vol:
  notification_database_vol:
  spendings_database_vol:

services:
  event_redis:
    image: redis
    restart: always
    networks:
      - event_network

  auth_database:
    image: mongo
    restart: always
    volumes:
      - auth_database_vol:/data/db
    networks:
      - auth_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  auth:
    build: ./auth-service
    ports:
      - "3000:3000"
    networks:
      - system_network
      - event_network
      - auth_network
    environment:
      NODE_ENV: development
      DATABASE_HOST: auth_database
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      EVENT_REDIS_HOST: event_redis
      NOTIFICATION_SERVICE_HOST: notification:3003
      HTTP_PORT: 3000

  cars_database:
    image: mongo
    restart: always
    volumes:
      - cars_database_vol:/data/db
    networks:
      - cars_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  cars_redis:
    image: redis
    restart: always
    networks:
      - cars_network
  cars:
    build: ./cars-service
    ports:
      - "3001:3001"
    networks:
      - system_network
      - event_network
      - cars_network
    environment:
      NODE_ENV: development
      DATABASE_HOST: cars_database
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      CACHE_REDIS_HOST: cars_redis
      EVENT_REDIS_HOST: event_redis
      HTTP_PORT: 3001

  notification_database:
    image: mongo
    restart: always
    volumes:
      - notification_database_vol:/data/db
    networks:
      - notification_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  notification:
    build: ./notification-service
    ports:
      - "3003:3003"
    networks:
      - system_network
      - event_network
      - notification_network
    environment:
      NODE_ENV: development
      DATABASE_HOST: notification_database
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      EVENT_REDIS_HOST: event_redis
      HTTP_PORT: 3003

  insurance_database:
    image: mongo
    restart: always
    volumes:
      - insurance_database_vol:/data/db
    networks:
      - insurance_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  insurance:
    build: ./insurance-service
    ports:
      - "3004:3004"
    networks:
      - system_network
      - insurance_network
    environment:
      NODE_ENV: development
      DATABASE_HOST: insurance_database
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      HTTP_PORT: 3004

  spendings_database:
    image: mongo
    restart: always
    volumes:
      - spendings_database_vol:/data/db
    networks:
      - spendings_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  spendings:
    build: ./spendings-service
    ports:
      - "3005:3005"
    networks:
      - system_network
      - spendings_network
    environment:
      NODE_ENV: development
      DATABASE_HOST: spendings_database
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      HTTP_PORT: 3005
